/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as NavRouteRouteImport } from './routes/_nav/route'
import { Route as NavIndexRouteImport } from './routes/_nav/index'
import { Route as Aldo2025RequestsRouteImport } from './routes/aldo2025.requests'
import { Route as NavAldo2025IndexRouteImport } from './routes/_nav/aldo2025.index'
import { Route as NavAldo2025IncidentsRouteImport } from './routes/_nav/aldo2025.incidents'
import { Route as NavAldo2025MonitorsIndexRouteImport } from './routes/_nav/aldo2025.monitors/index'
import { Route as NavAldo2025MonitorsMonitorNameRouteImport } from './routes/_nav/aldo2025.monitors/$monitorName'

const NavRouteRoute = NavRouteRouteImport.update({
  id: '/_nav',
  getParentRoute: () => rootRouteImport,
} as any)
const NavIndexRoute = NavIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => NavRouteRoute,
} as any)
const Aldo2025RequestsRoute = Aldo2025RequestsRouteImport.update({
  id: '/aldo2025/requests',
  path: '/aldo2025/requests',
  getParentRoute: () => rootRouteImport,
} as any)
const NavAldo2025IndexRoute = NavAldo2025IndexRouteImport.update({
  id: '/aldo2025/',
  path: '/aldo2025/',
  getParentRoute: () => NavRouteRoute,
} as any)
const NavAldo2025IncidentsRoute = NavAldo2025IncidentsRouteImport.update({
  id: '/aldo2025/incidents',
  path: '/aldo2025/incidents',
  getParentRoute: () => NavRouteRoute,
} as any)
const NavAldo2025MonitorsIndexRoute =
  NavAldo2025MonitorsIndexRouteImport.update({
    id: '/aldo2025/monitors/',
    path: '/aldo2025/monitors/',
    getParentRoute: () => NavRouteRoute,
  } as any)
const NavAldo2025MonitorsMonitorNameRoute =
  NavAldo2025MonitorsMonitorNameRouteImport.update({
    id: '/aldo2025/monitors/$monitorName',
    path: '/aldo2025/monitors/$monitorName',
    getParentRoute: () => NavRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/aldo2025/requests': typeof Aldo2025RequestsRoute
  '/': typeof NavIndexRoute
  '/aldo2025/incidents': typeof NavAldo2025IncidentsRoute
  '/aldo2025': typeof NavAldo2025IndexRoute
  '/aldo2025/monitors/$monitorName': typeof NavAldo2025MonitorsMonitorNameRoute
  '/aldo2025/monitors': typeof NavAldo2025MonitorsIndexRoute
}
export interface FileRoutesByTo {
  '/aldo2025/requests': typeof Aldo2025RequestsRoute
  '/': typeof NavIndexRoute
  '/aldo2025/incidents': typeof NavAldo2025IncidentsRoute
  '/aldo2025': typeof NavAldo2025IndexRoute
  '/aldo2025/monitors/$monitorName': typeof NavAldo2025MonitorsMonitorNameRoute
  '/aldo2025/monitors': typeof NavAldo2025MonitorsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_nav': typeof NavRouteRouteWithChildren
  '/aldo2025/requests': typeof Aldo2025RequestsRoute
  '/_nav/': typeof NavIndexRoute
  '/_nav/aldo2025/incidents': typeof NavAldo2025IncidentsRoute
  '/_nav/aldo2025/': typeof NavAldo2025IndexRoute
  '/_nav/aldo2025/monitors/$monitorName': typeof NavAldo2025MonitorsMonitorNameRoute
  '/_nav/aldo2025/monitors/': typeof NavAldo2025MonitorsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/aldo2025/requests'
    | '/'
    | '/aldo2025/incidents'
    | '/aldo2025'
    | '/aldo2025/monitors/$monitorName'
    | '/aldo2025/monitors'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/aldo2025/requests'
    | '/'
    | '/aldo2025/incidents'
    | '/aldo2025'
    | '/aldo2025/monitors/$monitorName'
    | '/aldo2025/monitors'
  id:
    | '__root__'
    | '/_nav'
    | '/aldo2025/requests'
    | '/_nav/'
    | '/_nav/aldo2025/incidents'
    | '/_nav/aldo2025/'
    | '/_nav/aldo2025/monitors/$monitorName'
    | '/_nav/aldo2025/monitors/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  NavRouteRoute: typeof NavRouteRouteWithChildren
  Aldo2025RequestsRoute: typeof Aldo2025RequestsRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_nav': {
      id: '/_nav'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof NavRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_nav/': {
      id: '/_nav/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof NavIndexRouteImport
      parentRoute: typeof NavRouteRoute
    }
    '/aldo2025/requests': {
      id: '/aldo2025/requests'
      path: '/aldo2025/requests'
      fullPath: '/aldo2025/requests'
      preLoaderRoute: typeof Aldo2025RequestsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_nav/aldo2025/': {
      id: '/_nav/aldo2025/'
      path: '/aldo2025'
      fullPath: '/aldo2025'
      preLoaderRoute: typeof NavAldo2025IndexRouteImport
      parentRoute: typeof NavRouteRoute
    }
    '/_nav/aldo2025/incidents': {
      id: '/_nav/aldo2025/incidents'
      path: '/aldo2025/incidents'
      fullPath: '/aldo2025/incidents'
      preLoaderRoute: typeof NavAldo2025IncidentsRouteImport
      parentRoute: typeof NavRouteRoute
    }
    '/_nav/aldo2025/monitors/': {
      id: '/_nav/aldo2025/monitors/'
      path: '/aldo2025/monitors'
      fullPath: '/aldo2025/monitors'
      preLoaderRoute: typeof NavAldo2025MonitorsIndexRouteImport
      parentRoute: typeof NavRouteRoute
    }
    '/_nav/aldo2025/monitors/$monitorName': {
      id: '/_nav/aldo2025/monitors/$monitorName'
      path: '/aldo2025/monitors/$monitorName'
      fullPath: '/aldo2025/monitors/$monitorName'
      preLoaderRoute: typeof NavAldo2025MonitorsMonitorNameRouteImport
      parentRoute: typeof NavRouteRoute
    }
  }
}

interface NavRouteRouteChildren {
  NavIndexRoute: typeof NavIndexRoute
  NavAldo2025IncidentsRoute: typeof NavAldo2025IncidentsRoute
  NavAldo2025IndexRoute: typeof NavAldo2025IndexRoute
  NavAldo2025MonitorsMonitorNameRoute: typeof NavAldo2025MonitorsMonitorNameRoute
  NavAldo2025MonitorsIndexRoute: typeof NavAldo2025MonitorsIndexRoute
}

const NavRouteRouteChildren: NavRouteRouteChildren = {
  NavIndexRoute: NavIndexRoute,
  NavAldo2025IncidentsRoute: NavAldo2025IncidentsRoute,
  NavAldo2025IndexRoute: NavAldo2025IndexRoute,
  NavAldo2025MonitorsMonitorNameRoute: NavAldo2025MonitorsMonitorNameRoute,
  NavAldo2025MonitorsIndexRoute: NavAldo2025MonitorsIndexRoute,
}

const NavRouteRouteWithChildren = NavRouteRoute._addFileChildren(
  NavRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  NavRouteRoute: NavRouteRouteWithChildren,
  Aldo2025RequestsRoute: Aldo2025RequestsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
